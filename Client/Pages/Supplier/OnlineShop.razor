@page "/online_shop"
@inject NavigationManager UriHelper
@inject ISnackbar SB
@inject HttpClient http

<div id="wrapper" style="pointer-events:@pointerEvent; opacity:@opacity">
    <HomeHeader />
    <div class="main">
        <div class="row align-content-center" style="padding-top:70px; padding-bottom:70px">
            <div class="col-md-4 offset-4">
                <h2 class="h2"><center>Supplier Registration</center></h2>
                <br />
                <MudGrid>
                    <MudItem>
                        <MudGrid Spacing="2" Justify="Justify.Center">
                            <MudItem>
                                <MudCard Style="width:300px; height:150px;" Elevation="10" @onclick="OpenDrawer">
                                    <MudCardContent>
                                        <center><MudText Typo="Typo.h6">Add New Product</MudText></center>
                                    </MudCardContent>
                                    <MudCardActions>
                                        <MudGrid Justify="Justify.Center">
                                            <MudIcon Icon="@Icons.Material.Filled.Add" Color="Color.Default" Style="height:75px; width:75px" />
                                        </MudGrid>
                                    </MudCardActions>
                                </MudCard>
                            </MudItem>
                            <MudItem>
                                @foreach (var item in products)
                                {
                                    <MudCard Elevation="10">
                                        <MudCardContent>
                                            <MudText Typo="Typo.h5">@item.ProdName </MudText>
                                            <MudText Typo="Typo.body2">@item.ProdDescription</MudText>
                                        </MudCardContent>
                                        <MudCardActions>
                                            <MudGrid Justify="Justify.Center">
                                                <MudIcon Icon="@Icons.Material.Filled.Add" Color="Color.Default" />
                                            </MudGrid>
                                        </MudCardActions>
                                    </MudCard>
                                }

                            </MudItem>
                        </MudGrid>
                    </MudItem>
                </MudGrid>

            </div>
        </div>
    </div>
</div>
<button @onclick="RefreshProducts">refresh</button>
<NavMenu NavItem="OnlineShopNav" @ref="navBar" />
<div style="display:@loadingIcon">
    <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;position:fixed;top:50%;left:50%;" Indeterminate="true" />
</div>
<MudDrawer @bind-Open="@drawerStatus" Anchor="Anchor.Bottom" DisableOverlay="false" Elevation="10" Variant="@DrawerVariant.Temporary" Style="--mud-drawer-content-height:544px !important">
    <AddProduct CloseDrawer="OpenDrawer" RefreshProducts="RefreshProducts"></AddProduct>
</MudDrawer>

@code {
    private string pointerEvent, loadingIcon = "none";
    private double opacity = 1;
    private NavMenu navBar;
    private List<ProductModel> products = new List<ProductModel>();
    private bool drawerStatus = false;

    protected override async void OnInitialized()
    {
        products = await http.GetFromJsonAsync<List<ProductModel>>("api/Product");
        base.OnInitialized();
    }

    void isLoading(bool value)
    {
        if (value)
        {
            loadingIcon = "";
            pointerEvent = "none";
            opacity = 0.25;
        }
        else
        {
            loadingIcon = "none";
            pointerEvent = "";
            opacity = 1;
        }
    }

    public void OpenDrawer()
    {
        if (drawerStatus)
        {
            drawerStatus = false;
        }
        else
        {
            drawerStatus = true;
        }
    }

    public async void RefreshProducts()
    {
        products = await http.GetFromJsonAsync<List<ProductModel>>("api/Product");
        //OpenDrawer();
    }
}