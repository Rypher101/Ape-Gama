@inject AuthenticationStateProvider AuthStateProvider
@inject HttpClient Http
@inject NavigationManager UriHelper

<nav id="menu">
    <div class="inner">
        <h2>Menu</h2>
        <ul>
            <li><a href="/" class="@Home">Home</a></li>

            <li><a href="menu.html">Menu</a></li>

            <AuthorizeView>
                <Authorized>
                    <li><a @onclick="LogOut" href="">Logout</a></li>
                </Authorized>
                <NotAuthorized>
                    <li>
                        <a class="dropdown-toggle">Login</a>

                        <ul>
                            <li><a href="/login_customer" class="@LoginCus">As a Customer</a></li>
                            <li><a href="/login_supplier" class="@LoginSup">As a Supplier</a></li>
                        </ul>
                    </li>
                </NotAuthorized>
            </AuthorizeView>
            <li><a href="contact.html">Contact Us</a></li>
        </ul>
    </div><a class="close" href="#menu">Close</a>
</nav>
@code {
    [Parameter]
    public string NavItem { get; set; }
    public string Home { get; set; }
    public string LoginCus { get; set; }
    public string LoginSup { get; set; }

    protected override void OnInitialized()
    {
        switch (NavItem)
        {
            case "HomeNav":
                Home = "active";
                break;
            case "LoginCusNav":
                LoginCus = "active";
                break;
            case "LoginSupNav":
                LoginSup = "active";
                break;

            default:
                break;
        }
        base.OnInitialized();
    }

    void LogOut()
    {
        Http.DeleteAsync("api/Login");
        AuthStateProvider.GetAuthenticationStateAsync();
        UriHelper.NavigateTo("/");
    }
}
